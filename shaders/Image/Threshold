{
    "name": "Threshold",
    "precision": "\n#ifdef GL_ES\nprecision highp float;\n#endif \n",
    "vert": "attribute vec3 aPosition;\nattribute vec2 aTexCoord;\nvarying vec2 vTexCoord;\n\nvoid main() {\n    vTexCoord = aTexCoord;\n    vec4 positionVec4 = vec4(aPosition, 1.0);\n    positionVec4.xy = positionVec4.xy * vec2(1., -1.);\n    gl_Position = positionVec4;\n}\n",
    "frag": "varying vec2 vTexCoord;\nuniform sampler2D tex0;\nuniform vec2 resolution;\nuniform float low;\nuniform float high;\nuniform bool b_invert;\n\n// https://github.com/hughsk/glsl-luma/blob/master/index.glsl\nfloat luma(vec3 color) {\nreturn dot(color, vec3(0.299, 0.587, 0.114));\n}\n\nfloat luma(vec4 color) {\nreturn dot(color.rgb, vec3(0.299, 0.587, 0.114));\n}\n\nvoid main() {\n    vec4 src = texture2D(tex0, vTexCoord);        \n    \n    bool thresh = (luma(src) > low) && (luma(src) < high);\n\n    vec3 color = vec3(0.0);\n\n    if(thresh){\n        color = vec3(1.0);\n    }\n\n    gl_FragColor = vec4(color.rgb,src.a);\n}",
    "uniforms": []
}