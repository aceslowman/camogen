{
  "type": "Shader",
  "name": "RGB2HSV",
  "inputs": ["tex0"],
  "outputs": ["out"],
  "uniforms": [
    {
      "uuid": "VkLznOAWADQc9UEOnUlgo",
      "name": "scale",
      "elements": [
        {
          "uuid": "param_VRRVeJ2r6yqZjAGnCFeiT",
          "uniform": "VkLznOAWADQc9UEOnUlgo",
          "name": "x:",
          "value": 1
        },
        {
          "uuid": "param_LVK6d0tt_O3B23iB4Y86w",
          "uniform": "VkLznOAWADQc9UEOnUlgo",
          "name": "y:",
          "value": 1
        },
        {
          "uuid": "param_6Sws-kNOpJHnmiZOH_0wM",
          "uniform": "VkLznOAWADQc9UEOnUlgo",
          "name": "z:",
          "value": 1
        }
      ],
      "type": "VEC3",
      "controlType": "NORMAL"
    },
    {
      "uuid": "oHchevJSivyKleUoVFApO",
      "name": "rotation",
      "elements": [
        {
          "uuid": "param_UQ4Quntl6ppEDSf3hlfcW",
          "uniform": "oHchevJSivyKleUoVFApO",
          "name": "x:",
          "value": 0
        },
        {
          "uuid": "param_Fom-CSoPdQGETmqiinMBu",
          "uniform": "oHchevJSivyKleUoVFApO",
          "name": "y:",
          "value": 0
        },
        {
          "uuid": "param_q1-uREWBhBEZbAPICkleu",
          "uniform": "oHchevJSivyKleUoVFApO",
          "name": "z:",
          "value": 0
        }
      ],
      "type": "VEC3",
      "controlType": "NORMAL"
    }
  ],
  "precision": "\n\t\t#ifdef GL_ES\n\t\tprecision highp float;\n\t\t#endif \n\t",
  "vert": "attribute vec3 aPosition;\nattribute vec2 aTexCoord;\nvarying vec2 vTexCoord;\n\nvoid main() {\n    vTexCoord = aTexCoord;\n    vec4 positionVec4 = vec4(aPosition,1.0);\n    positionVec4.xy = positionVec4.xy * vec2(1.,-1.);\n    gl_Position = positionVec4;\n}\n\t",
  "frag": "varying vec2 vTexCoord;\nuniform sampler2D tex0;\nuniform vec2 resolution;\nuniform vec3 scale;\nuniform vec3 rotation; //{'default': [0,0,0]}\n\n// https://stackoverflow.com/questions/15095909/from-rgb-to-hsv-in-opengl-glsl\n// All components are in the range [0â€¦1], including hue.\nvec3 rgb2hsv(vec3 c) {\n    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n    vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\n    vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\n\n    float d = q.x - min(q.w, q.y);\n    float e = 1.0e-10;\n    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n}\n\nvoid main() {\n    vec4 c = texture2D(tex0, vTexCoord);\n\n    vec3 rgb = scale * c.rgb;        \n\n    gl_FragColor = vec4(rgb2hsv(rgb + rotation), 1.0);\n}\n"
}
